#!/bin/bash

USER=`whoami`
SCREEN="/usr/bin/screen"
SCREENDIR="/usr/local/gpsy/profiles"
SCRIPTPATH="/usr/local/bin/gpsy"

### Colors ###
RED='\033[31m'
CYAN='\033[36m'
GREEN='\033[1;92m'
YELLOW='\033[93m'
RESET='\033[0m'

function main () {
	file=$1
	name=$USER"_"$file
	case $file in
		custom)
			#boing
			eval '/usr/bin/screen -S $name -c $SCREENDIR/$file'
			;;
		secure)
			#boing
			eval '$SCREEN -S $name -c $SCREENDIR/$file'
			;;
		salts)
			#boing
			eval '$SCREEN -S $name -c $SCREENDIR/$file'
			;;
		nopass)
			#boing
			eval '$SCREEN -S $name -c $SCREENDIR/$file'
			;;
		add)
			_addscr $2
			;;
		del)
			_delscr $2
			;;
		help)
			if [ $2 ]; then
				grep "^##" $SCREENDIR/$2 | sed -e 's/^##//'
			else
				printhelp
			fi
			;;
		set-default)
			if [ $2 ]; then
				if [ -e $SCREENDIR/$2 ]; then
					if [ -e $SCREENDIR/default ]; then
						unlink $SCREENDIR/default	
					fi
					ln -s $SCREENDIR/$2 $SCREENDIR/default
				else
					echo "Cannot find configuration $2"
				fi
			fi
			;;
		unset-default)
			if [ -e $SCREENDIR/default ]; then
				unlink $SCREENDIR/default
			fi
			;;
		list)
			_listall
			;;
		clean)
			_killscr
			;;
		kill)
			_killscr $2
			;;
		show)
			echo "Available sessions:"
			$SCREEN -ls | egrep -i 'detached|attached' | awk -F. '{print "\033[36m"$1"\033[0m -- "$2}'
			;;
		join)
			$SCREEN -x $2
			;;
		*)
			if [ -z "$1" ]; then
				if [ -e $SCREENDIR/default ]; then
					eval '$SCREEN -S $USER"_default" -c $SCREENDIR/default'
				fi
			else
				$SCREEN $@
			fi
			;;
	esac
}

function _addscr () {
	name=$1
	if [ -z $name ]; then echo "No configuration supplied"; fi

	file=$SCREENDIR/$name
	if [ -e $file ]; then
		newstring="\\\t\t$name\)\n\t\t\t#boing\n\t\t\t\eval '$SCREEN \-S \$name \-c \$SCREENDIR\/\$file'\n\t\t\t;;"
		sed -i "19i $newstring" $SCRIPTPATH
	else
		echo "Supplied configuration not found"
	fi

	source ~/.bashrc
}

function _delscr () {
	name=$1
	if [ -z $1 ]; then echo "No configuration supplied" && exit 1; fi
	var=$(_contains $1)
	if [[ "$var" != "0" ]]; then
		sed -i "/$name/,+2d" $SCRIPTPATH
	else
		echo "Cannot remove the configuration option"
	fi
}

function _contains () {
	permargs="add del help secure nopass"
	[[ $permargs =~ (^|[[:space:]])"$1"($|[[:space:]]) ]] && echo 0 | echo 1
	return $var
}

function _listall () {
	echo "available screens:"
	default=`ls -al $SCREENDIR | grep default | awk -F/ '{print $NF}' | sed -e 's/\n//'`
#	for x in `grep -B1 '#boing' $SCRIPTPATH | grep \) | sed -e "s/)//" -e "s/^\s\+//"`; do
	for x in `grep -B1 '#boing' $SCRIPTPATH | grep -v '#boing' | grep "\w)" | sed -e 's/^\s\+//' -e 's/)//'`; do
		if [[ "$x" == "$default" ]]; then
			echo "$x -- default"
		else
			echo $x
		fi
	done
}

function _killscr () {
	if [ $1 ]; then
		$SCREEN kill $1
	else
		for x in `$SCREEN -ls | grep '\.' | grep -v '\.$'`; do
			$SCREEN kill $(echo $x | awk -F'.' '{print $1}' | grep -vi det)
		done
	fi
}

function printhelp() {
	message="
	Gnu screen Profile SYstem (gpsy)

	Drew Foulks

	About:

		The Gnu Screen Profile System (gpsy for short), is a frontend utility designed to manage multiple screen configurations for gnu screen.
	       	screenrc files to be managed by this utility should be located in $SCREENDIR

	Usage:
		Print General Help:
			gpsy help

		Print profile specific documentation:
			gpsy help <profile>

		Add a new screen config:
			gpsy add <profile>

			Caveats:
				- gpsy does not recognize profile configurations outside of the $SCREENDIR directory
				- gpsy does not support the addition of screenrc files symbolically linked to the $SCREENDIR directory.


		Removing a screen config:
			gpsy del <profile>

			NOTE:
				- gpsy will unregister the configuration, making it inaccessible, but will NOT delete the file.

		Listing Available screen configurations:
			gpsy list

			NOTE:

				- This will only list the available profile configurations.

		Setting and Unsetting the default screen configuration:

			gpsy set-default <profile>

				NOTE: This will enable a particular config to be invoked with no option.

			gpsy unset-default

		
		Cleaning up old screen sessions:

			gpsy clean
			
		Listing currently available sessions:
			
			gpsy show

		Joining an available session:
		
			gpsy join <session-id>

"
echo "$message"
}

main $@

















